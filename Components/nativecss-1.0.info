{"Name":"NativeCSS","Id":242,"Alias":"nativecss","Description":"nativeCSS lets you style your xamarin iOS and Android (rev. 14) apps using just CSS.\n\n\nTo start with try styling all views to have a red background:\n\n```csharp\n\n\tusing Style;\n\t\n\n\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t{\n\t\t\t...\n\n\t\t\t// load css file from bundle folder\n\t\t\tNativeCSS.StyleWithCSS(\"view{background:red}\");\n\t}\n```\n\nnativeCSS supports most of the CSS 1, 2 and 3 specification. Here\u0027s an example snippet:\n\n```css\n\n\n/* style all iOS navigation bars and Android Action bars with a red gradient */\n\nnavbar{\n\n-ios-tint-color:#811;\n\nbackground:linear-gradient(bottom,red,#811);\n\n}\n\n/* style all iOS and Android buttons to be centered, and with different font and text color */\n\n\nbutton {\n\nwidth:90%;\n\nmargin:auto;\n\nfont-size:18px;\n\ncolor:#eee;\n\n-ios-padding: 5px 0px; // -ios- prefix targets ios only\n\n}\n\n```\n\n\nNext, try loading a complete style sheet from your iOS or Android assets:\n\n```csharp\n\n\tusing Style;\n\tusing Style.Enums;\t\n\n\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t{\n\t\t\t...\n\n\t\t\t// load css file from bundle folder\n\t\t\tNativeCSS.StyleWithCSS(\"styles.css\",null,RemoteContentRefreshPeriod.Never);\n\t}\n```\n\nTo simplify development you should enable live updating. \n\nLive updating reloads the CSS from any url on the fly, so you can make changes to the CSS and the app restyles automatically.\n\n\n```csharp\n\n\tusing Style;\n\tusing Style.Enums;\n\t\n\n\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t{\n\t\t\t...\n\n\t\t\tNativeCSS.StyleWithCSS(\"styles.css\",\n\t\t\t                       new Uri(\"http://localhost:8000/styles.css\"), \n\t\t\t                       RemoteContentRefreshPeriod.EverySecond);\n\t}\n```","Version":"1.0","Summary":"Style your xamarin iOS and Android apps with CSS.","QuickStart":"nativeCSS styles your app with standard CSS. CSS can be loaded from a local file, then remotely updated via URL.\n\n\n## iOS\n\n```csharp\n\nusing Style;\n\n\n\n\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t{\n\n\t\t\t...\n\n\t\t\tNativeCSS.StyleWithCSS(\"styles.css\",\n\t\t\t                       new Uri(\"http://localhost:8000/styles.css\"), \n\t\t\t                       RemoteContentRefreshPeriod.EverySecond);\n\n\t}\n```\n\n## Android\n```csharp\n\nusing Style;\n\n\n\tprotected override void OnCreate (Bundle bundle)\n\t{\n\t\t\t...\n\n\t\t\tNativeCSS.StyleWithCSS(\"styles.css\",\n\t\t\t                       new Uri(\"http://10.0.2.2:8000/styles.css\"), \n\t\t\t                       RemoteContentRefreshPeriod.EverySecond);\n\n\t\t\n\t}\n}\n```\n## Remote Stylesheets\n\nTo simplify development and make post release tweaks you should host your CSS on a server. \n\nA sample stylesheet named style.css is included in the solution, which we can easily host as a local url using python:\n\n```\ncd Tasky\npython -m SimpleHTTPServer \n\n```\n\nThe stylesheet is now available at http://localhost:8000/styles.css \n\n## Other Resources\n\n* [Component Documentation](http://nativecss.com)\n\n","Hash":"605795cb8826fc5db0d15d3dcf53846d","TargetPlatforms":["ios","android"],"TrialHash":null}